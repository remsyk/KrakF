/**
 * @author Justin Collier <jpcxme@gmail.com>
 * @license MIT
 * @see {@link http://github.com/jpcx/node-kraken-api|GitHub}
 */

/**
 * Types and methods specific to dynamically limiting call frequency in response to rate limit violations and according to the rate limit specifications listed in the [Kraken API docs]{@link https://www.kraken.com/help/api#api-call-rate-limit}
 *
 * @namespace API~RateLimits
 * @property  {module:API/RateLimits/LoadLimiter} LoadLimiter - Prepares rate-limiting promises according to the {@link Kraken~Tier}, {@link Kraken~Method}, and {@link Settings~RateLimiter}.
 */

/**
 * Separates calls into four categories that are known to have different server-side rate-limiting behavior.
 *
 * @typedef {('ohlc'|'trades'|'other'|'auth')} API~RateLimits~Category
 */

/**
 * Contains rate information for all calls.
 *
 * @typedef  {Object}   API~RateLimits~CallInfo
 * @property {number}   intvl - Current calculated safe interval.
 * @property {number[]} attmp - Array of call times (in ms) for attempted calls.
 * @property {number[]} compl - Array of call times (in ms) for responses.
 */

/**
 * Maps category names to associated rate info.
 *
 * @typedef {Map<API~RateLimits~Category,API~RateLimits~CatInfo>}
 */

/**
 * Holds information for category-specific frequencies.
 *
 * @typedef  {Object} API~RateLimits~CatInfo
 * @property {number} intvl - Current calculated safe interval.
 * @property {number} last  - Time (in ms) of last call attempt.
 */

/**
 * Rules for limiting call frequency and responding to violations. Frequencies are split into two main categories: all calls and specific calls. All calls frequency determines the request rate for any kind of call. Specific call frequencies are split into several categories of distinct server-side rate-limiting behavior. Pile-up refers to more calls being made than responses received.
 *
 * @typedef  {Object} API~RateLimits~LimitConfig
 * @property {number} baseIntvl        - Default call interval.
 * @property {number} minIntvl         - Minimum call interval.
 * @property {number} pileUpWindow     - Moving window of call logs to determine whether or not more calls are being made than received.
 * @property {number} pileUpThreshold  - Number of unanswered calls necessary to trigger frequency decrease.
 * @property {number} pileUpResetIntvl - Interval to reset all calls to in response to more calls made than received.
 * @property {number} pileUpMultiplier - Amount to multiply by call interval in response to excessive calling.
 * @property {number} lockoutResetIntvl - Interval to reset a call type to in response to a rate limit lockout. Interval is multiplied by the number of failed resume attempts plus one.
 * @property {number} violationResetIntvl - Interval to reset a call type to in response to a rate limit violation
 * @property {number} violationMultiplier - Multiplies call type interval in response to rate limit violations (if greater than violationResetIntvl).
 * @property {number} authCounterReductionTimeout - Rate limit violations during authenticated calling should only happen when multiple sources are utilizing the private API, or if node-kraken-api instance is reset before the authenticated counter expires. As such, maximum count is reduced by one for every violation, and is increased by one (restored) after this many milliseconds.
 * @property {number} anyPassDecay        - Amount to multiply all calls interval in response to a successful call.
 * @property {number} specificPassDecay   - Amount to multiply call type interval in response to a successful call.
 */
